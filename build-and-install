#!/bin/bash

SOURCES_TAR=( http://downloads.sourceforge.net/project/lame/lame/3.98.4/lame-3.98.4.tar.gz
    http://downloads.sourceforge.net/project/opencore-amr/opencore-amr/0.1.2/opencore-amr-0.1.2.tar.gz
    http://downloads.xiph.org/releases/ogg/libogg-1.3.2.tar.xz  
    http://downloads.xiph.org/releases/theora/libtheora-1.1.1.tar.bz2
    http://downloads.xiph.org/releases/vorbis/libvorbis-1.3.5.tar.xz )

SOURCES_GIT=( https://github.com/webmproject/libvpx )

declare -A SOURCES_AAC=()

WHITE='\033[1;37m'
NC='\033[0m' 

function install_xvid { 
    	 printf "${WHITE} Downloading Xvid source code... ${NC}\n"
        wget http://downloads.xvid.org/downloads/xvidcore-1.3.2.tar.gz 
        tar xf xvidcore-1.3.2.tar.gz
        cd xvidcore/build/generic
        printf "\n"
        printf "${WHITE}Prepare, build and install Xvid source.${NC}\n"
        ./configure 
        make 
        make install 
	ldconfig
        cd ../../../
        rm -rf xvidcore*
} 

function install_from_tar {
    URL="$1"
    FILE=$( basename $URL )
    DIR=$(echo $FILE | sed 's|.tar.*||g' )
    printf "${WHITE} Downloading ${DIR} source code... ${NC}\n"
    wget $URL -O $FILE
    tar xf $FILE
    cd $DIR
    printf "${WHITE} Configure, compile and install ${DIR} ... ${NC}\n"
    ./configure
    make
    make install
    ldconfig
    cd ..
    if [ ! -d /usr/src/$DIR ]; then
    	mv $DIR /usr/src/$DIR;
    else 
    	rm -rf $DIR;
    fi
    rm $FILE
}


function install_from_git {
    REPO="$1"
    DIR=$(echo $REPO | awk -F "/" '{print $NF}' | sed 's|.git||g' )
    printf "${WHITE}Downloading $DIR source code.${NC}\n"
    git clone $REPO
    cd $DIR
    printf "${WHITE} Configure, compile and install ${DIR} ... ${NC}\n"
    ./configure
    make
    make install 
    ldconfig
    cd ..
    if [ ! -d /usr/src/$DIR ]; then
    	mv $DIR /usr/src/$DIR;
    else 
    	rm -rf $DIR;
    fi
}

function install_x264 { 
		printf "${WHITE} Downloading x264 source code... ${NC}\n"
		git clone git://git.videolan.org/x264.git
		cd x264
		printf "${WHITE} Configure, compile and install x264 ... ${NC}\n"
		./configure --enable-shared --disable-asm
		make
		make install
		ldconfig
		cd ..
		rm -rf x264
} 

function install_faac { 
		"${WHITE} Downloading FAAC source code... ${NC}\n"
		wget http://downloads.sourceforge.net/faac/faac-1.28.tar.gz -O faac-1.28.tar.gz
		tar xf faac-1.28.tar.gz
		cd faac-1.28
		sed -i '126d' common/mp4v2/mpeg4ip.h
		printf "${WHITE} Configure, compile and install FAAC ... ${NC}\n"
		./bootstrap
		./configure
		make && make install
		ldconfig
		cd ..
		rm -rf faac-1.28*
} 

function install_ffmpeg { 
		printf "${WHITE} Clone FFMpeg source..${NC}\n"
		git clone git://git.videolan.org/ffmpeg.git ffmpeg
		cd ffmpeg
		printf "${WHITE}Building and installing FFMpeg source.${NC}\n"
		./configure --enable-version3 --enable-libopencore-amrnb --enable-libmp3lame \
		--enable-libopencore-amrwb --enable-libvpx --enable-libfaac \
		--enable-libmp3lame --enable-libtheora --enable-libvorbis \
		--enable-libx264 --enable-libxvid --enable-gpl --enable-postproc \
		--enable-nonfree
		make
		make install
		ldconfig
		cd ..
		rm -rf ffmpeg/
}

install_xvid
install_x264
install_faac 
for i in ${SOURCES_TAR[@]} ; do install_from_tar $i; done 
for y in ${SOURCES_GIT[@]}; do install_from_git $y; done 
install_ffmpeg
